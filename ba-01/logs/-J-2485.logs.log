do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000201940536499
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.69277191162e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.41074371338e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.20295715332e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.60691070557e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.29289245605e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.91549682617e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.51154327393e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.60555267334e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000109910964966
executed snippet estimated_duration=250.0, duration=0.00975394248962
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000138998031616
executed snippet estimated_duration=4.0, duration=0.000967979431152
Script duration 806.0
Run total estimated duration= 807.000
run duration: 0:13:27
doing event level: 2
15:05:55 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4967310640
close session 4967310640
$$$$$ Clearing conditionals
adding conditionals CDDtrip
extract conditionals from file. /Users/jan/PychronDev/scripts/conditionals/CDDtrip.yaml
no attr for this modification cd={'extraction_str': '', 'attr': '', 'mapper': '', 'use_termination': False, 'start_count': 0, 'nskip': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': 'Skip Next Run', 'ntrips': 1, 'use_truncation': False}
adding cancelation attr="Ar36" test="Ar36<0.002" start="60"
no attr for this truncation cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
adding termination attr="Ar40" test="Ar40>5000.0" start="1"
Invalid conditional kind="pre_run_terminations"
no attr for this action cd={'mapper': '', 'attr': '', 'start_count': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': None, 'ntrips': 1}
Invalid conditional kind="post_run_terminations"
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-J-2485
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-J-2485
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
15:05:55 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.30120,0.04542,-0.09297,-0.03199,0.09257,0.00211
15:05:55 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
15:05:55 -- ******* Pre Extraction Check Passed *******
=================================================================================
15:05:55 -- stopping status monitor
stop 4939519376
Status monitor stopped
Status monitor finished
15:05:56 -- starting status monitor
start 4939519376
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 15:05:58.364025
Extraction Started jan_sniffair_x2.py
15:05:58 -- ******* Extraction Started jan_sniffair_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12a13cd10>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.88758087158e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.0001060962677
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.9870223999e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.88893890381e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.58442687988e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.60691070557e-05
executed snippet estimated_duration=250.0, duration=0.00991702079773
Jan Air Sniff Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.91006469727e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0167770385742
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000194072723389
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
15:05:58 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
15:05:59 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=3
15:05:59 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
15:06:00 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
15:06:00 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=3
15:06:01 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
15:06:01 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
15:06:02 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
15:06:03 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
15:06:03 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=3
15:06:04 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=6.13100790977
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000164985656738
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
15:06:04 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
15:06:05 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=3
15:06:05 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
15:06:07 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0389130116
executed snippet estimated_duration=48.0, duration=17.9221909046
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000164985656738
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
15:06:22 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0526788235
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=3
15:06:39 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.9428501129
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000121831893921
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
15:06:40 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
15:06:40 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01119995117
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
15:06:43 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.54844594002
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000131130218506
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
15:06:44 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02252721786
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
15:06:46 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0546109676
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.9106099606
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000166893005371
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
State checksums do not match. Local:-1712165773 Remote:136797436
State checksum failed
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
15:07:03 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
Join finished
block finished. duration 15.0631871223
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=3
15:07:19 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8910021782
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.69956207275e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
15:07:20 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
15:07:21 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.0105509758
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
15:07:24 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.50465416908
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=8.79764556885e-05
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
15:07:24 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02625203133
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
15:07:26 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.042730093
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.9602601528
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000102996826172
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
15:07:43 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00990891457
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
15:07:45 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0752840042
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=3
15:08:17 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.00850296021
executed snippet estimated_duration=105.0, duration=37.0757348537
SniffPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=250.0, duration=141.939782858
jan_sniffair_x2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
15:08:20 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
15:08:20 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8253 5.8789 5.9920 6.1652 6.2306 6.3934
Ar39     5.7245 5.7712 5.8844 6.0513 6.1157 6.2799
Ar36     5.4020 5.4402 5.5478 5.7101 5.7707 5.9310
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.482695477019
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=ba-01-J analysis type=blank_air
Measurement Started jan_unknown400_120.py
15:08:20 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 197.923274125618
GetParameter Source Current Readback ===>> 554.23963864982
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
testing...
no interpolation path defined
executed snippet estimated_duration=564.372928, duration=0.000150918960571
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57053999]
H1 map mass to dac 39.9624 >> 5.87893
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87889537953) on H1
setting magnet DAC
current  : 5.878895
requested: 5.878895
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87889537953 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 8.0}
Equilibration Started
15:08:22 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1549b4ef0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x12e17fe90>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x14963a1d0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
15:08:22 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
15:08:26 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 8.0sec
set_time_zero () {}
sniff (8.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
measuring sniff. ncounts=8.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
set states for children of D. state=False
handle state [('D', False)]
update switch state D False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1795133105 Remote:-1214048420
State checksum failed
Equilibration Finished
set states for children of B. state=False
15:08:34 -- ******* Equilibration Finished *******
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
refresh_canvas_needed fired
Close R ===>> OK
waiting for write to finish
measurement finished
estimated time: 8.389 actual time: :8.480
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
set_fits () {}
GetIndicatorState R ===>> False
change switch state (True, True)
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
update switch state R False args=() kw={} ncanvase=3
15:08:35 -- CLOSE  VALVE-R (Jan Inlet)
set "Ar41" to "('linear', 'SEM')"
Post Equilibration Started jan_pump_extraction_line.py
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
15:08:35 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
testing...
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
no interpolation path defined
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000266790390015
executed snippet estimated_duration=4.0, duration=0.0161089897156
set "H2" to "('average', 'SEM')"
Pump after analysis
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
doing GOSUB
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
testing...
multicollect () {'integration_time': 1, 'ncounts': 400}
no interpolation path defined
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
executed snippet estimated_duration=4.0, duration=0.00019907951355
Pump Microbone
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
close () {'description': 'Jan Inlet'}
add group /signal/Ar39 (Group) '' table AX
close name=--- desc=Jan Inlet
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
checking ownership. requestor=129.138.12.150
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
check software interlocks R
interlocks []
measuring signal. ncounts=400
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
starting measurement
15:08:36 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
15:08:36 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.21051382375313413}"
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
15:08:38 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.10482298259846579}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
15:08:38 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 3.5485777515828407}"
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
15:08:39 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
State checksums do not match. Local:-1867535983 Remote:-1357015788
State checksum failed
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
15:08:40 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 4.197757223807062}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
15:08:40 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1.2308359618350122}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.72731113434
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.60012054443e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
testing Ar40>5000.0
change switch state (True, True)
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.37209997239151715}"
update switch state E False args=() kw={} ncanvase=3
15:08:42 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
set states for children of I. state=True
handle state [('I', True)]
update switch state I True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=3
15:08:43 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.2789497661424538}"
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
15:08:44 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.491403188531356}"
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4421297770404755}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=3
15:08:45 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=3
15:08:46 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46129847785880307}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6088495558726366}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.509136331389003}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.493300319990992}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4110671500910116}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.2797709002709027}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.253730854346938}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.27182196898951794}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.3000319421992206}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.2698489114943913}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.17605179732419665}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.1517218953880072}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.17864449894690257}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.14460667103441596}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.11434462647916424}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:09:01 -- collecting point 25
Join finished
block finished. duration 15.1510920525
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=3
15:09:01 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
15:09:02 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.11533954881998329}"
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=20.2860760689
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=27.0383870602
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
15:09:02 -- ******* Post Equilibration Finished *******
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.08562184654580085}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.11511025382937695}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.1366259690202993}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.12691449229570376}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.12435172453135321}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.12621085700536208}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.12606611669544257}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.11168033189867133}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.08646756759429827}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.08131762247848712}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.10218361797200737}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.10360559966095081}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.09832150843708506}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.09450323431752133}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.09877334136266117}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.089117736149247}"
set states for children of B. state=True
handle state [('B', True)]
update switch state B True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.08552272019878907}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07975760813892577}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06924238387020334}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0540628304265722}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049480267592469346}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04235247532052333}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05119824845685922}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05679714318053167}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:09:27 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0515645497943204}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.038212901615245154}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.032353260438661435}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.024052313129391573}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.01930619206736897}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.027195514522872888}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.025707619721958702}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.033850971133592644}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03566034790394462}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03537004699550528}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.037063595510525627}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006633803471753043}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03277972975095217}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006469872807163589}"
State checksums do not match. Local:-1735986017 Remote:968834110
State checksum failed
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.026267403290094166}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006258655866311857}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.021511942986637445}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006292485749914044}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.023177097928168744}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006160516207940567}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.019355975056940145}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006086613343467995}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.015935095232959107}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006061176076236989}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.02071228471259512}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005919747398675859}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0266225747313438}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00589099710080124}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03261747770264922}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005942747537659733}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.030876202318518536}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00599494865229531}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.031014615253423694}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00596915128715168}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.029994492817353974}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058777792673290925}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03209328221415808}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005843484422866062}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.033621388910718}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005748040883874219}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:09:53 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.02746360547012397}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005708605825028709}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.028379449730670275}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005600147668936915}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.027635784196697183}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005605189589015269}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03135674609700928}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005650841383325205}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03247363619529017}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005554778307077285}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03411771215143522}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005542906212612166}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03145179963716499}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005613889759037201}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.030516719926260122}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005578847146553399}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.029899739039653483}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005666992006801565}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.031917921400849564}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005700468142393049}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03179878451837531}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005587863850115388}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03489853809230284}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005542768707932222}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.039670107510562075}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054898534810600705}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03584331252918599}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005533218776976075}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03696471158256198}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005513003324223553}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03931935731239902}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005464483060903269}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.044249481603567065}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005462601730821784}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050212734433666445}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005448931169614067}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050741081878214606}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005424936632083331}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048383286127362396}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005383440364451429}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05458548822333284}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005418592684667753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05529045714259287}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414061219715294}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05464420530761421}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005350188388523191}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05626526487757255}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053139634471031155}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.056646344990694375}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005318026763995094}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:10:20 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0571313676093739}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005334439501946751}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05377779605915006}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005239392887069713}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05686076245145036}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005256718156314354}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05555020004588879}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005321809175872458}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05462001242964867}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005187295036994672}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052966475066440005}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005265705258261772}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05331247126972394}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0052912804057141626}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05040754423118765}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005206205698811619}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052653178060785344}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005223832423897752}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05432023453106821}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005141346495330686}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.053618851195915584}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005192739900492497}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052708453505000086}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0051568828454494784}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05262517783243853}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0051285394475231085}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05464649167290697}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005106998216714134}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.056339672244501704}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005078753903106847}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.054873075060133364}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005038163971719588}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05529453706616155}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005036765640742789}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05745943819660013}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005052096467048722}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.055361848282034304}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0050273096888465586}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05481086613717229}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005002632319651363}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05296611318159619}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004966128570212583}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052553860226947746}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004859792468470924}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05219681554770253}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004848412258859418}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.051269091746425965}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0048132557514105395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04940452546211263}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004813812889520583}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:10:46 -- collecting point 125
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.051133408399940794}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00477321976383397}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049375947565642425}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004723286084853753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04578449400266507}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00473140828359876}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04654402587640935}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004688289464045713}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04904313374469185}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004777407814185044}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048330966623369415}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004815330494968384}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04821697179275264}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00480641847394121}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05116689301844948}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00473897403835473}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0522515766969813}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004716904995815395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.053923662782826925}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004705509365956912}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05435450866018579}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00470390151730247}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05582668972336871}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004766704195248404}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05610078431247506}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004763629008198211}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0584535666194029}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004808846438865546}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06200350564711021}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004839558728083863}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06351216012883373}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004784177006106299}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06456214233437133}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00477935923612112}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06424245862866029}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004725953402769806}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06418642534393104}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004712687090637159}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06302975836544669}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004657084830438685}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06319667701617077}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0046503923890376}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0644713111343582}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0046338364557449545}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0629308562723224}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004621819894222015}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06461007770357471}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00466798044280332}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06518151850309559}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004651883819480712}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:11:12 -- collecting point 150
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06851424035250617}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004671046509001518}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07037707037260701}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004643955435271997}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07092011810247745}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004647890635740581}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07165282896792222}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00460737443093907}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07117573933233826}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004589750423085166}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07122408199128333}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0046356497678900705}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07030492309362693}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0046480946738342395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07014945914106333}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004691856784987775}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06985882279715996}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004661511158325906}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06877020089338287}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004660546317698023}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07034513693495281}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004621965081737131}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0696469123003935}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004620898910825148}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06923049927851813}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004614798541502661}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06821679192433272}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004600058603679352}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06644612137629291}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004565514830754553}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0654235621429313}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004590472929183508}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0663279129566596}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004562606576706228}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06738512588231824}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00455456845250698}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06816220349496976}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004572623744544725}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07004640190441636}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004596112437575183}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07129860350481934}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004534722275585114}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07078900944617539}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0044871123520577455}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06827984625909198}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004533594845383106}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06631222739321746}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004510469833631985}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06608622354345667}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004484088359795837}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:11:38 -- collecting point 175
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06886719487171158}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004447477971269295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07005389331353873}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0044120807201226825}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06916777167014826}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004374300781832126}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06757140672311282}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004404906183915228}"
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06794334209369299}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004394422108613879}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06805767640360647}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004355871770953791}"
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06757531388336757}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0043359609428263585}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06695469391545153}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004340403282952852}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06804108455443625}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004330224982931815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06647369177533027}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00432661770754655}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06604046736473893}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004345971294937949}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06512596289104797}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004353511263994922}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06412686054050615}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004306885376515564}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06383668066831233}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004262047473904447}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.064616294860569}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0042417939292788654}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06378118928115281}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00422520976105149}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06424229361133102}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004244327915658476}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06478321627070197}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004232976988509863}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06347673607591872}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004234301639311858}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06312603150242319}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004228600412473265}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0618619044045316}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004250818244868937}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06059997573543521}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0042650061597390735}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.059993765628692436}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004271608022820496}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06022442491958513}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004280287260042917}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06100439539657937}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0042786755442906395}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:12:05 -- collecting point 200
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.060817151034305766}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004267355548591371}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06059738330629763}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004243860890626762}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06067756810338573}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004265930214459064}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05899933919931655}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004292215514730752}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.058924861474020235}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004295771319931561}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05867457555442995}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004295527980330303}"
State checksums do not match. Local:1671910529 Remote:2052577745
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.058900725155304395}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004303404058403429}"
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05871857525572119}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004307303038865244}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.059330365357806975}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004278502127242952}"
set states for children of C. state=True
set states for children of B. state=True
set states for children of D. state=True
handle state [('C', True), ('B', True), ('D', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05767739103093031}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004305071506201181}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.057984065438485693}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004286805277112808}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05642982370854588}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004294322246001213}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05576632115142735}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004269739600419048}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05499107950998364}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004301834738940714}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.054617619510669096}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004295447859229337}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0533287456657357}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004299795702768236}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052427311506522356}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00430051144716373}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05174922970914966}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004295037989092545}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05185703739978925}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004270056974163586}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05165315096981968}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004256429646960935}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05151492724036591}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004226606865491821}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050354663756404155}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004224354437306295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050074091293985074}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004192257790366534}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048854410251290864}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004206112652095984}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048711873861915694}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004192377467062322}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:12:31 -- collecting point 225
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04887130476412327}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0042206398698496446}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04967713881035454}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004207914034555798}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05123443882857531}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004239263712912052}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04977071335586819}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004222173977010152}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04933740676154055}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004228331722983718}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04870488212779836}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004236169495328937}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04896110798146894}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004210055409543532}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04952365590984367}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004224889085500633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049958711826336266}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004238483996746905}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050770512583319855}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004240893627918319}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05072504473614123}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00421525435624066}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050740053618120534}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004197540182315808}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05040212027952015}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004148031154236597}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.051786001748011595}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004168579687425241}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050580673758167605}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0041584962242145794}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05028442681458098}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004138598282390155}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05130578453574747}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004133452443150327}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05179076168180327}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0041303859588874}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.051474361489943526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0041698483950518275}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05131472577486737}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004171534873652071}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05099875452462152}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004132460533458697}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05113423228859823}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00411325430866025}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05046623795901395}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004101329522916377}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04897292352105481}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0041079890657408835}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048846741962370044}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004097665228371653}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:12:57 -- collecting point 250
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04812796328048202}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004091858414942494}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.047578267898179094}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004051400931447795}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04760754981593149}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004055427604963599}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.047025800446228366}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0040883286087122755}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04638143229719574}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004132986134560221}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.046033898118409966}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004143882950660231}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04551475005978514}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00412921112282867}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.046059871093762306}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004116827751578537}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04672781829291725}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004104421450072773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04527517589567609}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0040964088275823}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04396755841343586}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004086015673880599}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.044337939086584705}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004062420979971334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0454323020740694}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004058838324173256}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04568000099286865}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004033263976879826}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04543440866870127}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00404700913083191}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04473027381112751}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004055475756267031}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04393440177894101}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004024703486656884}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04321899956871597}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004007400261260605}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04333555154097571}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004017821666050677}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043170973278286395}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0040316208747815194}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04324220646614482}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0040192779231420905}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04430074278834989}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004015300743934086}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04344959927879524}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00402142445207542}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04303842148405837}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003999965997428465}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042895337011922025}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004005655599525619}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:13:23 -- collecting point 275
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04341292227787483}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003986075302070477}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043352555572661794}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00398721437316352}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04327355184450013}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003977716829393202}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04394252577098398}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003994471714695387}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04362035122437524}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003992045122266865}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042562092271320434}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.004005343782259601}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.041976139674945734}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003971743282640264}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04231313282274099}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003962821062771921}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04176845066511417}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003965703152488848}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04215234330239101}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0039503024862733984}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04220279333987703}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0039723976642056956}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0406605755666353}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003977639278867075}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.040232735122682245}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0039491374829718415}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04073628134057075}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003950356440643338}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0400104915538369}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00392792926165134}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03955653720134292}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00391744452644284}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03986313413418616}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003908855070538518}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03955946460543411}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0039020916739144866}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04022878528598714}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003878062470429049}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04064369967609169}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003890485918454028}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04120460069853843}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003854949616706584}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04061944700460515}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003835300433007547}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.041015519421204016}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003855270393671974}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.039975280704508426}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0038332082387440144}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03846581143991598}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003846816302897501}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:13:50 -- collecting point 300
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.037410148799503745}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0038429765201672783}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03670268404032559}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0038205017527891323}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03765567102205283}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0038076131840310687}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0386658372212455}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003794822479241537}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0394410405366272}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00376574622885822}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.038979222727032}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037536336026540817}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03890194098656227}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037578670322571534}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03931540880195675}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003754456533999414}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03990224101424625}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037418891728656796}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03949459553993631}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003756211729270657}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03830645833904647}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037590926664531166}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03714836209342187}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003756258874316344}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03729457137184705}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037549770062679337}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03721478043700088}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003748158886067955}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03785245467255363}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003753521392666904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03785624649210398}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037374690184274893}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.038972179648922245}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037216345470804666}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.03958961760999949}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003718140590643394}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.041269749763327895}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003709293041887956}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04134192213205665}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037107591890534236}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042518724775003874}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003698191180291549}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04305859207037219}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037130506858841393}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04265129469296822}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003725463825244117}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.041827736298331836}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037185666310033732}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04141077047103123}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036997858649781825}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:14:16 -- collecting point 325
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04221266500486856}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003706542683678915}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042498777471868227}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003712815047055594}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042414923107295804}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037102656912384314}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04217323295824568}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003722495832421361}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04218367229628092}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003732413992525459}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04291774345414873}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037268756933515664}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042624298902431024}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037327527216192468}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04186512194740269}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003734889348511991}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04202940035213676}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037219679292919564}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04251977788372671}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037140467877215173}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04301545846962354}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036947260811890253}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04317933529138043}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036773385469524274}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043317613138837696}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003698898337227322}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04253680774002147}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003685818262885313}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0426286953901272}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003698477000037184}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04302134500687943}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003702519675946059}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04348531306363526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0037125380198837913}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04364540832278102}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003690309191491773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04319777349425216}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003692155779100242}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04283986796167025}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003692114766798058}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04272682354102572}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003688680654335523}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043076429205032934}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00368665095643136}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043384788034744826}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036844232052628857}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04330682206805361}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003708395589607231}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04337253086312762}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036757138253252605}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:14:42 -- collecting point 350
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043293584478750285}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036838158417447564}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04253650840526768}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036898956028825524}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04204533543444669}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003669507271963916}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.041778932767525534}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003643343976008975}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04236804955031115}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036587726190542664}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04292934319708713}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036492512304593925}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04372486617725116}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036246404052412214}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.044553575938308415}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0036019966872390522}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04504684036253473}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003588778678177553}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.044747071356006696}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003587686560300781}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04445014152262447}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035893890217181287}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.044905466518923326}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003583387771290089}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.044893333880191205}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035773350406239895}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0442065396502474}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003553501422304838}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04271651185564074}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003553686616168829}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04218268293973956}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003556595738752762}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042003203483665486}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035621441808895496}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04181579191776372}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003549821529226203}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04175017297915115}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035449028304983974}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042368331369504825}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035384659655600934}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04253949522286243}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003523330335673847}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04216017285396431}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035343443352137322}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04268495501567135}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035376797314831373}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04298581286790698}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035307024912573557}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04281422397335591}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035180058646020317}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:15:08 -- collecting point 375
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04288247939206749}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003509726247372409}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04289690204334329}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035142467446650227}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04304513968289764}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035071402451035435}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04253508240874454}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003500035779397939}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04184551787774668}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0035112077811297617}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04158647080273262}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003517691501159728}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04166335677475658}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003511240318526372}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04178892111918506}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034978070493277766}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04206783543713585}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003481765907092863}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.042619660249426566}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003482580921984015}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04293580296660096}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003481816373074432}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043191681058137255}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034850230215571765}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04271575519040757}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034783624242335303}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.043356799814289554}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003486748298758069}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04434563304062125}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003486555250383253}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04491314181350839}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003501151955398277}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.045554754583496865}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003497564330685509}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.045564928736192084}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003470904101254754}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.046141642502930263}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034878961592673292}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04701371009766042}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034827728825203397}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04789155054145727}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034923497575061507}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04799170599200128}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003480127239179765}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04807898027999019}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034840323128658337}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04780205433456272}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003485009150561099}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04796693460699336}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003485789762183194}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927128038593386}"
15:15:35 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.244
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57053999]
H1 map mass to dac 34.2 >> 5.23958599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.23955513561) on H1
setting magnet DAC
current  : 5.878895
requested: 5.239555
Delta Dac: 0.639340
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.23955513561 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04845828110737688}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06670648387126953}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052563598153283264}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06684661008483544}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11088295140847529}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.07658978064773463}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05950909540435581}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05474885336425407}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05198871516244766}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05138661777841766}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12634294371489307}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05882604337869807}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06530412424689694}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.065731412924962}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06497335020988028}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.061641118596573896}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11608844289673684}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06184937321101629}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0632908434368018}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0632196539963455}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06516629176872953}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0636920034562798}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11403755803703093}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.06087443802398011}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.060076783259705155}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.057207844208312805}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.060470235944124914}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.059539035117436676}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11819052637587406}"
15:16:17 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0572085757631904}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05695864054481195}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05741257151647493}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05691836494104717}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.058448363627982405}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11928119786532833}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05664245207879637}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05495689804038641}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.053986242084929095}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05530326969740085}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.054982881461756256}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12274668003155448}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05431154997291936}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.055529997221040295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.054169438200296904}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.051873814533094226}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05179166290201187}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12593789859129886}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0531226950919728}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.053539916857456654}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05523893260863401}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.055311474964120214}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05573807631611111}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12199148517719963}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05529329224938509}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05312192247587573}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05352980850313448}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05351929172547146}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.053241823093479204}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12448773839983153}"
15:16:43 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05379580432789617}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05272931990611007}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052473183073605545}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05160893642271028}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05112888466242363}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1266006768308871}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05208077122504359}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.052344768495667854}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05102677675861528}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050276449785023186}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05110952501753313}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1266200364757776}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05129098476351723}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003482284632353148}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0515582200673855}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00348236694188176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05188244739700967}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034824465962642872}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05108979623065385}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034825237219362586}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05061081031806047}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034825984374309803}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12711875117525026}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049470330562195575}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003482670853987403}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048729656179666014}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034827410761027223}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049038965318119354}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003482809202035494}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04827958960253381}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034806602295973117}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04782345449018757}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034807565380610963}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12990610700312316}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04881500256210042}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034808500948544873}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04912567826083761}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034809410162452478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048915825443993616}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00348102941204182}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04813482799200483}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034811153860357467}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0472287387836024}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034791635440114673}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13050082270970834}"
15:17:10 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04678188673865752}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034792721036059604}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04800456984690579}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00347937780636902}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0484134148327417}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003477524576107592}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048274122538527586}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00347764997274209}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04857377437288726}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003477772194778247}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12915578712042347}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049233600711889924}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034778913612634995}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04885359823197771}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034780075853664003}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04874687538686634}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003478120974735084}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04957429377215028}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034782316318298233}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04995452166543696}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003478339654231831}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12777503982787378}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04989897920516437}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003478445134930262}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050528701175702295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034785481625891944}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05106416688859347}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034786488217961975}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05090827576887996}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034787471932939506}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.050469047496915914}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034788433541962484}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12726051399639482}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049446380110464955}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034789373781896065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04935956511703965}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479029335721572}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.0498910821690203}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034791192941767556}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04990373949565399}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479207318041505}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049679496957199754}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479293469058068}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12805006453611098}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.05021144963407176}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00347937780636902}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04995249668790541}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034794603866526597}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.049512584453271835}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479541264250039}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04890586664312177}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034796204912842066}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04827429675894346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034796981177722297}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12945526473436728}"
15:17:36 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04867288710532444}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479774191730492}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04940280629091939}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479848759273739}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048961390061801974}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479921864708295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048508629609104875}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034799935506198503}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048458435125401295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003480063857956183}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12927112636790944}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048177106115004587}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003480132826105157}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048248504684476196}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034787794888422696}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04839238314040073}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003478859171316626}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04812235379615043}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034789373781896065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04831038995491008}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479014150074091}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12941917153840066}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048470713805783605}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479089526106131}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04840693339263394}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034791635440114673}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048487475415950276}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479236240168494}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04859066476339474}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034793076496678742}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04793613650926418}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00347937780636902}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12979342498404656}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.048098553501585484}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034794467429536237}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04883544630834247}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479514490976424}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04882648459275088}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034795810809133644}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04919527366511986}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.003479646542207306}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.04908266123789909}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0034797109033114335}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12864690025541164}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.163
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=6.23338998495 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x14a64ebf0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x14a64ebf0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x14a64ebf0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57053999]
H1 map mass to dac 39.9624 >> 5.87893
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x125e26d70>
doing pc
starting peak center. center dac= 5.87889537953 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87890 width=0.03000 (5.86390 - 5.89390)
Moving to starting dac 5.86389537953
setting magnet DAC
current  : 5.239555
requested: 5.863895
Delta Dac: 0.624340
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86389537953 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.103542620939. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.86389537953, em= 5.89389537953, stm= 0.0015
calculated step values: start=5.86389537953, end=5.89389537953, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.863895
requested: 5.863895
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86389537953 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863895
requested: 5.865474
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8654743269 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865474
requested: 5.867053
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86705327427 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867053
requested: 5.868632
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86863222164 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868632
requested: 5.870211
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87021116901 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870211
requested: 5.871790
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87179011637 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871790
requested: 5.873369
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87336906374 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873369
requested: 5.874948
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87494801111 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874948
requested: 5.876527
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87652695848 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876527
requested: 5.878106
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87810590585 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878106
requested: 5.879685
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87968485322 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879685
requested: 5.881264
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88126380059 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881264
requested: 5.882843
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88284274795 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882843
requested: 5.884422
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88442169532 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884422
requested: 5.886001
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88600064269 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886001
requested: 5.887580
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88757959006 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887580
requested: 5.889159
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88915853743 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889159
requested: 5.890737
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8907374848 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890737
requested: 5.892316
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89231643216 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892316
requested: 5.893895
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89389537953 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8715005899533494, 5.8791058003741909, 5.8867110107950325], [6.0998208660501412, 8.2349844272720389, 6.1256711089624254], 5.8812701290315053, 8.2349844272720389)
Failed to find a valid peak. No peak greater than 1.0. max = 0.567853493428
Failed to find a valid peak. No peak greater than 1.0. max = 0.0988627831758
Failed to find a valid peak. No peak greater than 1.0. max = 0.0159664183482
new center pos Detector(H1) (Ar40) @ 5.87910580037
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87914042208
update mftable H1 Ar40 5.87914042208 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893895
requested: 5.879106
Delta Dac: 0.014790
Checking detector protection. dv=0.01479
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87910580037 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.567853493428
Failed to find a valid peak. No peak greater than 1.0. max = 0.0988627831758
Failed to find a valid peak. No peak greater than 1.0. max = 0.0159664183482
flush and close file /Users/jan/PychronDev/data/isotopes/95/319019-07af-4da2-b43e-986c00bd5e08.h5
finished measure script
executed snippet estimated_duration=564.372928, duration=628.697183847
jan_unknown400_120.py completed successfully
Measurement Finished
15:18:50 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
15:18:50 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.8133392334e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
15:18:50 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.385984182358
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
15:18:50 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5855640176 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5855640176
close session 5855640176
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4724807920
MassSpec Database Version: 16.0
close session 4724807920
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to ba-01-J
setting aliquot to 2485
setting step to 
setting uuid to 95319019-07af-4da2-b43e-986c00bd5e08
setting irradpos to ba-01-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_air
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df87450> len t=120
baseline Ar41. v=-0.192131038539, e=0.00462195755598
get signal data Ar41 H2
Get data signal Ar41 -0.000+/-0.006 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x137735d90> len t=120
baseline Ar40. v=0.127571994972, e=0.00377633554209
get signal data Ar40 H1
Get data signal Ar40 0.051+/-0.007 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x137735fd0> len t=120
baseline Ar39. v=-0.0707106862095, e=0.00470126214779
get signal data Ar39 AX
Get data signal Ar39 0.043+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x137735ad0> len t=120
baseline Ar38. v=-0.0345378820286, e=0.00188865019409
get signal data Ar38 L1
Get data signal Ar38 0.0068+/-0.0022 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x14bd31110> len t=120
baseline Ar37. v=-0.0195735315487, e=0.00451744228047
get signal data Ar37 L2
Get data signal Ar37 0.056+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x14610ef90> len t=120
baseline Ar36. v=7.53132186797e-06, e=3.0093626625e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00336+/-0.00017 len t=400
ba-01-J-2485 added analysis time 0.569607973099s
analysis added to mass spec database
mass spec save time= 0.578
persistence save - dvc
================= post measurement started
create new session 4939153776
close session 4939153776
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.567853493428
Failed to find a valid peak. No peak greater than 1.0. max = 0.0988627831758
Failed to find a valid peak. No peak greater than 1.0. max = 0.0159664183482
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-2485.json
add to repo msg=modified - -J-2485.dat.json
add to repo msg=modified - -J-2485.blan.json
add to repo msg=modified - -J-2485.inte.json
add to repo msg=modified - -J-2485.icfa.json
add to repo msg=modified - -J-2485.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/ba-01/tags/-J-2485.tags.json
add to repo msg=modified - -J-2485.peak.json
add to repo msg=modified - -J-2485.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/ba-01/monitor/-J-2485.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-2485.inte.json
add to repo msg=modified - -J-2485.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-2485.blan.json
commit message=<BLANKS> preceding bu-FC-J-7996
add to repo msg=modified - -J-2485.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1550349b0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4939153776
add association Jan_air170
get identifier "ba-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1552bd8d0>
close session 4939153776
================= post measurement finished
15:19:03 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
15:19:03 -- ******* Post Run Check Passed *******
15:19:03 -- Automated run ba-01-J-2485 success duration: 788.787 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=13
update duration runid=ba-01-J-2485, duration=788.787050009, md5=c78a166a
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000431776046753
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.72204589844e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000126838684082
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000111818313599
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000114917755127
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000134944915771
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000232219696045
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000104904174805
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.39097595215e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=8.20159912109e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000125169754028
executed snippet estimated_duration=250.0, duration=0.0385799407959
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00019097328186
executed snippet estimated_duration=4.0, duration=0.00759887695312
Script duration 806.0
Run total estimated duration= 807.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
pump_ms in script context. using previous estimated duration
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
pump_extraction_line in script context. using previous estimated duration
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000192165374756
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.10215759277e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000125885009766
executed snippet estimated_duration=0.0, duration=0.00711894035339
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:214.0
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.29289245605e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000125885009766
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000104904174805
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000118017196655
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.60419464111e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000153064727783
executed snippet estimated_duration=108.0, duration=0.0204980373383
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
nruns=140 before=5.0, run_dur=42370.0, btw=6255.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
