do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000178813934326
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.81198120117e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.00543212891e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.89301300049e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.41481781006e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.70227813721e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.50746917725e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.82012939453e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000576019287109
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.60555267334e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=7.9870223999e-05
executed snippet estimated_duration=250.0, duration=0.0102109909058
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000133991241455
executed snippet estimated_duration=4.0, duration=0.00107598304749
Script duration 806.0
Run total estimated duration= 807.000
run duration: 0:13:27
doing event level: 2
07:51:56 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4944253680
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run a-01-J-5501
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run a-01-J-5501
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
07:51:56 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.16494,0.12522,-0.13909,-0.01483,0.01086,0.00211
07:51:56 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
07:51:56 -- ******* Pre Extraction Check Passed *******
=================================================================================
07:51:56 -- stopping status monitor
stop 4942102352
Status monitor stopped
07:51:58 -- starting status monitor
start 4942102352
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 07:51:59.897980
Extraction Started jan_sniffair_x2.py
07:51:59 -- ******* Extraction Started jan_sniffair_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x1293b80b0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000105142593384
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.3936920166e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.58306884766e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.91549682617e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.60691070557e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.57899475098e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=8.01086425781e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.70227813721e-05
executed snippet estimated_duration=250.0, duration=0.0100269317627
Jan Air Sniff Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.00543212891e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0173869132996
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000210046768188
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
07:52:00 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
07:52:00 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=4
07:52:01 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
07:52:01 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
07:52:02 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=4
07:52:02 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
07:52:03 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
07:52:03 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
07:52:04 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
07:52:04 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=4
07:52:05 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.92385101318
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.82148742676e-05
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
07:52:06 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
07:52:06 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
07:52:07 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
07:52:08 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Join finished
block finished. duration 15.0535020828
executed snippet estimated_duration=48.0, duration=17.9669189453
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.29832458496e-05
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
07:52:23 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
open name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Z ===>> OK
GetIndicatorState Z ===>> OK
change switch state (True, True)
update switch state Z True args=() kw={} ncanvase=4
07:52:25 -- OPEN   VALVE-Z (Inner Pipette 2)
-------------------------- open None (Inner Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0503308773
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
07:52:40 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.228482008
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000123023986816
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=4
07:52:42 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
07:52:42 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01007199287
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
07:52:45 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.51007008553
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000166177749634
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
07:52:45 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01190400124
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
increment shot count 2724
saved current shot count 2724
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
07:52:48 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0293591022
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.8635458946
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000205039978027
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
State checksums do not match. Local:-1971056164 Remote:1314755832
State checksum failed
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
07:53:04 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
open name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Z ===>> OK
GetIndicatorState Z ===>> OK
change switch state (True, True)
update switch state Z True args=() kw={} ncanvase=4
07:53:05 -- OPEN   VALVE-Z (Inner Pipette 2)
-------------------------- open None (Inner Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0640671253
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
07:53:21 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.2113399506
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.48634338379e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=4
07:53:22 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
07:53:23 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00662899017
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
07:53:25 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.43947482109
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000180006027222
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
07:53:26 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01882696152
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
increment shot count 2725
saved current shot count 2725
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
07:53:28 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0512938499
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.9023909569
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000234127044678
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
07:53:45 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02425312996
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
07:53:47 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.1105120182
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=4
07:54:18 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.02992391586
executed snippet estimated_duration=105.0, duration=37.0129601955
SniffPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=250.0, duration=142.110870123
jan_sniffair_x2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Extraction Finished
07:54:22 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
07:54:22 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8257 5.8790 5.9929 6.1657 6.2312 6.3939
Ar39     5.7250 5.7713 5.8853 6.0517 6.1164 6.2804
Ar36     5.4025 5.4403 5.5487 5.7106 5.7713 5.9315
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 197.587621314778
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=a-01-J analysis type=air
Measurement Started jan_unknown400_120.py
07:54:22 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.482695477019
GetParameter Source Current Readback ===>> 551.076725874382
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
testing...
no interpolation path defined
executed snippet estimated_duration=564.372928, duration=0.000186920166016
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar40 blank 0.097+/-0.007
 - setting Ar36 blank 0.00325+/-0.00015
 - setting Ar37 blank 0.046+/-0.005
 - setting Ar38 blank 0.0100+/-0.0023
 - setting PM41 blank 0.02+/-0.06
 - setting Ar39 blank 0.036+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57059999]
H1 map mass to dac 39.9624 >> 5.87899
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning Ar40 (5.87899) on H1
setting magnet DAC
current  : 5.878990
requested: 5.878990
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87899 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x126b35230>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x133ae8bf0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1334d10b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 8.0}
Equilibration Started
07:54:23 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=4
07:54:23 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=4
07:54:27 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 8.0sec
set_time_zero () {}
sniff (8.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
measuring sniff. ncounts=8.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
07:54:35 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
07:54:35 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
07:54:35 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000148057937622
executed snippet estimated_duration=4.0, duration=0.00126791000366
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000197887420654
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
07:54:36 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 8.389 actual time: :8.502
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
measuring signal. ncounts=400
action=close, ok=True, locked=[False]
"signal" increment series count="2" fit count="1" regressing="True"
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=4
07:54:36 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
07:54:38 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
07:54:38 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
07:54:39 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
set states for children of T. state=True
handle state [('T', True)]
update switch state T True args=() kw={'refresh': False} ncanvase=4
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=4
refresh_canvas_needed fired
07:54:40 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
07:54:41 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.73549795151
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
07:54:42 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=4
07:54:43 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=4
07:54:44 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=4
07:54:45 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=4
07:54:46 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
Join finished
block finished. duration 15.0409240723
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=4
07:55:01 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
07:55:02 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:55:02 -- collecting point 25
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=19.6557211876
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=26.4234170914
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
07:55:02 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:55:28 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:55:54 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:56:21 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:56:47 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:57:13 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:57:39 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:58:06 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:58:32 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:58:58 -- collecting point 250
a-01-J-5501   air   NoIrradiation A:1 set to terminate after 1200 counts
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:59:24 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
07:59:51 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:00:17 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:00:43 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:01:10 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:01:36 -- collecting point 400
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:02:02 -- collecting point 425
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:02:28 -- collecting point 450
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:02:55 -- collecting point 475
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:03:21 -- collecting point 500
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:03:47 -- collecting point 525
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:04:13 -- collecting point 550
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:04:40 -- collecting point 575
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:05:06 -- collecting point 600
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:05:32 -- collecting point 625
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:05:58 -- collecting point 650
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:06:25 -- collecting point 675
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:06:51 -- collecting point 700
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
State checksums do not match. Local:-860229079 Remote:-110011688
State checksum failed
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:07:17 -- collecting point 725
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
State checksums do not match. Local:-1767794026 Remote:-1408344577
State checksum failed
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:07:44 -- collecting point 750
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:08:10 -- collecting point 775
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:08:36 -- collecting point 800
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:09:02 -- collecting point 825
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:09:29 -- collecting point 850
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:09:55 -- collecting point 875
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:10:21 -- collecting point 900
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:10:47 -- collecting point 925
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:11:14 -- collecting point 950
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:11:40 -- collecting point 975
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:12:06 -- collecting point 1000
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:12:32 -- collecting point 1025
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:12:59 -- collecting point 1050
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:13:25 -- collecting point 1075
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:13:51 -- collecting point 1100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:14:18 -- collecting point 1125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:14:44 -- collecting point 1150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:15:10 -- collecting point 1175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1326949372670418}"
08:15:36 -- collecting point 1200
08:15:37 -- user termination. measurement iteration executed 1200/400 counts
state changed from measurement to truncated
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :1260.993
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57059999]
H1 map mass to dac 34.2 >> 5.23964599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.23964599104) on H1
setting magnet DAC
current  : 5.878990
requested: 5.239646
Delta Dac: 0.639344
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.23964599104 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1407402573779139}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1403198372120861}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14430586898257985}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.144277364385403}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14406186669185453}"
08:16:19 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14386240987837584}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.141297240946366}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13701320479810236}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14001773340184176}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13674378649091737}"
08:16:45 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13810935842071903}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1378043916511214}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13817294006695735}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1352451425038095}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13257135453885122}"
08:17:11 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13196785082066997}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13259045326476518}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13174404779404095}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1329936422902036}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1329724649771007}"
08:17:38 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13218123483927122}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13343989719469168}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1351977533738805}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13605948932770634}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.142
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=54.7318203291 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x13a1509b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x134f45fb0>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x13a1509b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x134f45fb0>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57059999]
H1 map mass to dac 39.9624 >> 5.87899
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x134f7e350>
doing pc
starting peak center. center dac= 5.87899 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87899 width=0.03000 (5.86399 - 5.89399)
Moving to starting dac 5.86399
setting magnet DAC
current  : 5.239646
requested: 5.863990
Delta Dac: 0.624344
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86399 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.029268858189. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86399, em= 5.89399, stm= 0.0015
calculated step values: start=5.86399, end=5.89399, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.863990
requested: 5.863990
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86399 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863990
requested: 5.865569
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86556894737 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865569
requested: 5.867148
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86714789474 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867148
requested: 5.868727
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86872684211 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868727
requested: 5.870306
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87030578947 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870306
requested: 5.871885
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87188473684 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871885
requested: 5.873464
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87346368421 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873464
requested: 5.875043
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87504263158 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875043
requested: 5.876622
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87662157895 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876622
requested: 5.878201
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87820052632 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878201
requested: 5.879779
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87977947368 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879779
requested: 5.881358
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88135842105 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881358
requested: 5.882937
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88293736842 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882937
requested: 5.884516
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88451631579 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884516
requested: 5.886095
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88609526316 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886095
requested: 5.887674
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88767421053 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887674
requested: 5.889253
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88925315789 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889253
requested: 5.890832
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89083210526 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890832
requested: 5.892411
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89241105263 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892411
requested: 5.893990
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89399 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8712344889779562, 5.8790200601202409, 5.8868056312625257], [38.328717149228851, 52.098920956512018, 38.38362583328297], 5.8781783767535067, 52.098920956512018)
Failed to find a valid peak. No peak greater than 1.0. max = 0.548596876366
Failed to find a valid peak. No peak greater than 1.0. max = 0.119565859915
Failed to find a valid peak. No peak greater than 1.0. max = 0.162619061237
new center pos Detector(H1) (Ar40) @ 5.87902006012
GetHighVoltage ===>> 4500
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87902006012
update mftable H1 Ar40 5.87902006012 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/setupfiles/spectrometer/jan_mftable_archive, universal_newlines=False, shell=None)
Popen(['git', 'cat-file', '--batch'], cwd=/Users/jan/PychronDev/setupfiles/spectrometer/jan_mftable_archive, universal_newlines=False, shell=None)
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893990
requested: 5.879020
Delta Dac: 0.014970
Checking detector protection. dv=0.01497
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87902006012 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.548596876366
Failed to find a valid peak. No peak greater than 1.0. max = 0.119565859915
Failed to find a valid peak. No peak greater than 1.0. max = 0.162619061237
flush and close file /Users/jan/PychronDev/data/isotopes/3a/4a9519-ff51-4b15-9a35-013b2e802a38.h5
finished measure script
executed snippet estimated_duration=564.372928, duration=1471.08446884
jan_unknown400_120.py completed successfully
Measurement Finished
08:18:53 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
08:18:53 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.00407409668e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
08:18:53 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.375249862671
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
08:18:54 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end truncated
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5007982768 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5007982768
close session 5007982768
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5014660112
MassSpec Database Version: 16.0
close session 5014660112
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to a-01-J
setting aliquot to 5501
setting step to 
setting uuid to 3a4a9519-ff51-4b15-9a35-013b2e802a38
setting irradpos to a-01-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 1200 sec measurement
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to air
setting material to Gas
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
adding new session for Jan
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: 1200 sec measurement %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13164ec50> len t=120
baseline Ar41. v=-0.190566899981, e=0.00509953233172
get signal data Ar41 H2
Get data signal Ar41 0.0050+/-0.0035 len t=1200
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13164ee10> len t=120
baseline Ar40. v=0.136796437219, e=0.00394204954911
get signal data Ar40 H1
Get data signal Ar40 74.913+/-0.007 len t=1200
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x13164efd0> len t=120
baseline Ar39. v=-0.0720941263353, e=0.00434434311394
get signal data Ar39 AX
Get data signal Ar39 0.022+/-0.004 len t=1200
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13165d1d0> len t=120
baseline Ar38. v=-0.0244239367633, e=0.00157091454135
get signal data Ar38 L1
Get data signal Ar38 0.0521+/-0.0012 len t=1200
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13165d390> len t=120
baseline Ar37. v=-0.0199180039188, e=0.00379210059178
get signal data Ar37 L2
Get data signal Ar37 0.0509+/-0.0029 len t=1200
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x13165d550> len t=120
baseline Ar36. v=1.88283046699e-05, e=4.56653464149e-06
get signal data Ar36 CDD
Get data signal Ar36 0.2538+/-0.0004 len t=1200
a-01-J-5501 added analysis time 0.646454811096s
analysis added to mass spec database
mass spec save time= 0.664
persistence save - dvc
================= post measurement started
create new session 4940873808
close session 4940873808
add to repo msg=modified - jan_unknown400_120.py
add to repo msg=modified - jan_sniffair_x2.py
add to repo msg=modified - jan_pump_ms.py
add to repo msg=modified - jan_pump_extraction_line.py
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.548596876366
Failed to find a valid peak. No peak greater than 1.0. max = 0.119565859915
Failed to find a valid peak. No peak greater than 1.0. max = 0.162619061237
Popen(['git', 'fetch', 'origin'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air170, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air170, universal_newlines=False, shell=None)
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-5501.json
add to repo msg=modified - -J-5501.dat.json
add to repo msg=modified - -J-5501.blan.json
add to repo msg=modified - -J-5501.inte.json
add to repo msg=modified - -J-5501.icfa.json
add to repo msg=modified - -J-5501.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/a-01/tags/-J-5501.tags.json
add to repo msg=modified - -J-5501.peak.json
add to repo msg=modified - -J-5501.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/a-01/monitor/-J-5501.moni.json
commit message=<COLLECTION>
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air170, universal_newlines=False, shell=None)
Popen(['git', 'cat-file', '--batch'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air170, universal_newlines=False, shell=None)
add to repo msg=modified - -J-5501.inte.json
add to repo msg=modified - -J-5501.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-5501.blan.json
commit message=<BLANKS> preceding 
add to repo msg=modified - -J-5501.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1278e7a70>
pushing to remote=origin, url=https://github.com
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air170, universal_newlines=False, shell=None)
Popen(['git', 'fetch', 'origin'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Smart pull ahead: 0 behind: 0
Up-to-date with origin
Popen(['git', 'diff', 'HEAD', '--name-only'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
no changes to meta repo
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
create new session 4940873808
add association Jan_air170
get identifier "a-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x128775110>
close session 4940873808
================= post measurement finished
08:19:04 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
08:19:04 -- ******* Post Run Check Passed *******
08:19:04 -- Automated run a-01-J-5501 truncated duration: 1628.233 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/AirsCocktails.rem.txt
/Users/jan/PychronDev/experiments/rem/AirsCocktails.ex.txt
doing event level: 3
