do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000342130661011
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.81469726562e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000127077102661
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000343799591064
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000200986862183
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000118970870972
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.89029693604e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.3936920166e-05
executed snippet estimated_duration=106.0, duration=0.0097770690918
script duration name:air_x1 seconds:106.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000151872634888
executed snippet estimated_duration=4.0, duration=0.00106811523438
Script duration 662.0
Run total estimated duration= 663.000
run duration: 0:11:03
doing event level: 2
02:29:08 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4954829744
close session 4954829744
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run a-01-J-5836
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run a-01-J-5836
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
02:29:08 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.07002,0.09787,-0.12393,0.00508,0.03280,0.00297
02:29:08 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
02:29:08 -- ******* Pre Extraction Check Passed *******
=================================================================================
02:29:08 -- stopping status monitor
stop 4942573296
Status monitor stopped
Status monitor finished
02:29:09 -- starting status monitor
start 4942573296
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
start extraction
do extraction
Analysis started at 02:29:11.319308
Extraction Started jan_air_x1.py
02:29:11 -- ******* Extraction Started jan_air_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12ff892f0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.103515625e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000186920166016
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000101089477539
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.79764556885e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.50746917725e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.5101852417e-05
executed snippet estimated_duration=106.0, duration=0.041109085083
Jan Air Script x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 1
Read FelixMiniboneFlag ===>> 1
State checksums do not match. Local:308250487 Remote:-1153033366
State checksum failed
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Read FelixMiniboneFlag ===>> 1
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=4
Read FelixMiniboneFlag ===>> 1
refresh_canvas_needed fired
State checksums do not match. Local:308250487 Remote:1971109982
State checksum failed
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Read FelixMiniboneFlag ===>> 1
Read FelixMiniboneFlag ===>> 1
Read FelixMiniboneFlag ===>> 1
set states for children of C. state=True
set states for children of H. state=False
handle state [('C', True), ('H', False)]
update switch state C True args=() kw={'refresh': True} ncanvase=4
update switch state H False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
State checksums do not match. Local:-2038898666 Remote:658581687
State checksum failed
set states for children of B. state=True
set states for children of D. state=True
handle state [('B', True), ('D', True)]
update switch state B True args=() kw={'refresh': True} ncanvase=4
update switch state D True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Read FelixMiniboneFlag ===>> 1
set states for children of P. state=True
handle state [('P', True)]
update switch state P True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
State checksums do not match. Local:-646558306 Remote:1128315222
State checksum failed
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 29.3690822124
set states for children of I. state=False
set states for children of Q. state=True
handle state [('I', False), ('Q', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=4
update switch state Q True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Read MinibonePumpTimeFlag ===>> 28.3581790924
Read MinibonePumpTimeFlag ===>> 18.2706551552
Read MinibonePumpTimeFlag ===>> 8.19696617126
finished waiting
executed snippet estimated_duration=0, duration=94.1749198437
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000110864639282
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
02:30:45 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
02:30:46 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=4
02:30:47 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
02:30:47 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
02:30:48 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=4
02:30:48 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
02:30:49 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
02:30:49 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
02:30:50 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
02:30:51 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=4
02:30:51 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=6.73054385185
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000180959701538
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
02:30:52 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
02:30:53 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
02:30:53 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
02:30:55 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1584668159
executed snippet estimated_duration=48.0, duration=18.287610054
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000216007232666
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
02:31:10 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
open name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Z ===>> OK
GetIndicatorState Z ===>> OK
change switch state (True, True)
update switch state Z True args=() kw={} ncanvase=4
02:31:12 -- OPEN   VALVE-Z (Inner Pipette 2)
-------------------------- open None (Inner Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1340157986
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Z ===>> OK
set states for children of Z. state=False
handle state [('Z', False)]
update switch state Z False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
02:31:27 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.61200881
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000115871429443
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=4
02:31:29 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
02:31:29 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.04579091072
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
02:31:32 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.66066002846
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000101089477539
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
02:31:33 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.06633520126
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
increment shot count 3431
saved current shot count 3431
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
02:31:36 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1484220028
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=19.5695149899
ExpandPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=106.0, duration=161.245715141
jan_air_x1.py completed successfully
Get Handler timed out. timeout=3. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
GetAchievedOutput ===>> ERROR: Connection refused: TCP://129.138.12.133:1063, timeout=None
Requested Output= 0.000
Achieved Output=  0.000
Get Handler timed out. timeout=3. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
GetResponseBlob ===>> ERROR: Connection refused: TCP://129.138.12.133:1063, timeout=None
Get Handler timed out. timeout=3. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
Get Handler timed out. timeout=0.25. comms simulation=False
GetOutputBlob ===>> ERROR: Connection refused: TCP://129.138.12.133:1063, timeout=None
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
02:32:03 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
02:32:03 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0549 5.8784 5.9920 6.1934 6.2299 6.6787
Ar39     6.0098 5.7693 6.0560 6.3366 6.1126 6.5652
Ar36     5.6874 5.4383 5.7194 5.9954 5.7676 6.2163
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=a-01-J analysis type=air
Measurement Started jan_unknown400_120.py
02:32:03 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.0102
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.258926936459
GetParameter Source Current Readback ===>> 552.414881279375
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
testing...
no interpolation path defined
executed snippet estimated_duration=582.052928, duration=0.000149011611938
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.0104+/-0.0032
 - setting Ar40 blank 0.537+/-0.008
 - setting Ar36 blank 0.00513+/-0.00020
 - setting Ar37 blank 0.056+/-0.005
 - setting Ar38 blank 0.0076+/-0.0024
 - setting Ar39 blank 0.011+/-0.011
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02895323e+00]
H1 map mass to dac 39.9624 >> 5.87836
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87832538289) on H1
setting magnet DAC
current  : 5.878325
requested: 5.878325
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87832538289 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 25.0}
Equilibration Started
02:32:04 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=4
02:32:04 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x156393ef0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1745e3170>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x173b5b0b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=4
02:32:08 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 25.0sec
set_time_zero () {}
sniff (25.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
measuring sniff. ncounts=25.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
02:32:33 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
02:32:34 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
02:32:34 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000402212142944
executed snippet estimated_duration=4.0, duration=0.0167620182037
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000151872634888
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
02:32:34 -- collecting point 25
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
02:32:34 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=4
02:32:34 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
waiting for write to finish
measurement finished
estimated time: 26.214 actual time: :26.432
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
measuring signal. ncounts=400
"signal" increment series count="2" fit count="1" regressing="True"
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
02:32:36 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
02:32:36 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
02:32:37 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=4
02:32:38 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
02:32:39 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.28831005096
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.41210174561e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
02:32:40 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=4
02:32:41 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=4
02:32:42 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
set states for children of P. state=True
handle state [('P', True)]
update switch state P True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=4
02:32:43 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=4
02:32:44 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
Join finished
block finished. duration 15.1629300117
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=4
02:33:00 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
02:33:00 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=20.1926939487
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=26.5778341293
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
02:33:00 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:33:01 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:33:27 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:33:53 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:34:20 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:34:46 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:35:12 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:35:39 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:36:05 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:36:31 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:36:58 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:37:24 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:37:50 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:38:17 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:38:43 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:39:09 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10923452222198489}"
02:39:36 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :421.310
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02895323e+00]
H1 map mass to dac 34.2 >> 5.24047160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24044074708) on H1
setting magnet DAC
current  : 5.878325
requested: 5.240441
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24044074708 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.047209606973752725}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09253598094064214}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08622836201272865}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08797927773492638}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10120698572000197}"
02:40:21 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10353180321407925}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10128779567457163}"
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10371870679889152}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10015861369412765}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10330801416528483}"
02:40:47 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10539744855315038}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1063624436529668}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1065311095331375}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10722073250004618}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10472348531892563}"
02:41:13 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10615009764829343}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10618859197497145}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10350246622496921}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10321929689114513}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10149253069725347}"
02:41:40 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10023763149230172}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09881580351004933}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09910346419592836}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1008769281792078}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.437
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=839.984169427 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x17bae1110>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12c4b6170>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x17bae1110>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12c4b6170>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x17a2b5350>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12c4b6170>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02895323e+00]
H1 map mass to dac 39.9624 >> 5.87836
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x12c4b61d0>
doing pc
starting peak center. center dac= 5.87832538289 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87833 width=0.03000 (5.86333 - 5.89333)
Moving to starting dac 5.86332538289
setting magnet DAC
current  : 5.240441
requested: 5.863325
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86332538289 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0820660787025. timeout= 10
set states for children of E. state=True
set states for children of Q. state=False
handle state [('E', True), ('Q', False)]
update switch state E True args=() kw={'refresh': True} ncanvase=4
update switch state Q False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
set states for children of D. state=False
handle state [('D', False)]
update switch state D False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
State checksums do not match. Local:-869564398 Remote:611344307
State checksum failed
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Peak center failed to move to a baseline position
_do_sweep sm= 5.86332538289, em= 5.89332538289, stm= 0.001
calculated step values: start=5.86332538289, end=5.89332538289, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.863325
requested: 5.863325
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86332538289 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863325
requested: 5.864360
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86435986565 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864360
requested: 5.865394
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86539434841 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865394
requested: 5.866429
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86642883117 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866429
requested: 5.867463
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86746331392 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867463
requested: 5.868498
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86849779668 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868498
requested: 5.869532
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86953227944 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869532
requested: 5.870567
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8705667622 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870567
requested: 5.871601
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87160124496 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871601
requested: 5.872636
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87263572772 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872636
requested: 5.873670
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87367021048 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873670
requested: 5.874705
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87470469323 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874705
requested: 5.875739
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87573917599 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875739
requested: 5.876774
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87677365875 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876774
requested: 5.877808
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87780814151 ===>> OK
Magnet settling time: 1.049 0.500
State checksums do not match. Local:-1747703360 Remote:611344307
State checksum failed
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877808
requested: 5.878843
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87884262427 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of W. state=False
set states for children of X. state=True
handle state [('W', False), ('X', True)]
update switch state W False args=() kw={'refresh': True} ncanvase=4
update switch state X True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878843
requested: 5.879877
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87987710703 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879877
requested: 5.880912
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88091158979 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880912
requested: 5.881946
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88194607254 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881946
requested: 5.882981
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8829805553 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882981
requested: 5.884015
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88401503806 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884015
requested: 5.885050
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88504952082 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885050
requested: 5.886084
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88608400358 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886084
requested: 5.887118
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88711848634 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887118
requested: 5.888153
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8881529691 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888153
requested: 5.889187
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88918745185 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889187
requested: 5.890222
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89022193461 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890222
requested: 5.891256
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89125641737 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891256
requested: 5.892291
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89229090013 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892291
requested: 5.893325
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89332538289 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8707502325885823, 5.8783554430094238, 5.8859606534302653], [578.28338540298546, 784.22611649877717, 583.2510096999215], 5.8788965251737517, 784.22611649877717)
Failed to find a valid peak. No peak greater than 1.0. max = 0.137331529085
new center pos Detector(H1) (Ar40) @ 5.87835544301
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.8783900603
update mftable H1 Ar40 5.8783900603 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893325
requested: 5.878355
Delta Dac: 0.014970
Checking detector protection. dv=0.01497
State checksums do not match. Local:611344307 Remote:-1725866079
Checking detector "CDD". Protection Threshold: 0.5 (V)
State checksum failed
SetMagnetDAC 5.87835544301 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.137331529085
flush and close file /Users/jan/PychronDev/data/isotopes/c3/8deb7f-6fd1-49f8-a42e-4d700689923b.h5
finished measure script
executed snippet estimated_duration=582.052928, duration=645.513989925
jan_unknown400_120.py completed successfully
Measurement Finished
02:42:49 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
02:42:49 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.98023223877e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
02:42:49 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=4
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.3718521595
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
02:42:49 -- ******* Post Measurement Finished *******
refresh_canvas_needed fired
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-07-20T02:34:33',
                    'title': 'iServer Hum.',
                    'value': 53.7},
                   {'device': 'RPiWeather',
                    'name': 'Lab Hum. 2',
                    'pub_date': '2017-07-20T02:42:18',
                    'title': 'Base Station Hum.',
                    'value': 50.0770797729492}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-07-20T02:42:19',
                     'title': None,
                     'value': 80.025},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-07-20T02:42:32',
                     'title': None,
                     'value': 79.89436},
                    {'device': 'RPiWeather',
                     'name': 'Lab Pressure',
                     'pub_date': '2017-07-20T02:28:06',
                     'title': None,
                     'value': 869.007568359375}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-07-20T01:25:40',
                       'title': None,
                       'value': -196.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-07-20T01:30:44',
                       'title': 'iServer Temp.',
                       'value': 74.1},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-07-20T02:18:02',
                       'title': None,
                       'value': 18.0},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 2',
                       'pub_date': '2017-07-20T02:42:00',
                       'title': 'Base Station Temp.',
                       'value': 82.2562267303467},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 3',
                       'pub_date': '2017-07-20T02:38:37',
                       'title': 'EastDiffuser01',
                       'value': 59.7866},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 4',
                       'pub_date': '2017-07-20T02:42:23',
                       'title': 'EastReturn02',
                       'value': 72.275},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 5',
                       'pub_date': '2017-07-20T01:08:24',
                       'title': 'iServerCalibration03',
                       'value': 73.4},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 6',
                       'pub_date': '2017-07-20T02:37:32',
                       'title': 'SouthWall04',
                       'value': 72.6116},
                      {'device': 'RPiWeather',
                       'name': 'Lab Temp. 7',
                       'pub_date': '2017-07-20T01:38:14',
                       'title': 'SouthWindow05',
                       'value': 71.9366}]}
persistence save...
persistence save - db
post measurement save
5826258704 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5826258704
close session 5826258704
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4934102672
MassSpec Database Version: 16.0
close session 4934102672
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to a-01-J
setting aliquot to 5836
setting step to 
setting uuid to c38deb7f-6fd1-49f8-a42e-4d700689923b
setting irradpos to a-01-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to air
setting material to Gas
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x129885890> len t=120
baseline Ar41. v=-0.0979552343457, e=0.00300544344034
get signal data Ar41 H2
Get data signal Ar41 0.068+/-0.004 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x129885490> len t=120
baseline Ar40. v=0.100121630456, e=0.00366955069982
get signal data Ar40 H1
Get data signal Ar40 964.73+/-0.05 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x129885b10> len t=120
baseline Ar39. v=-0.0465895514679, e=0.00492863452398
get signal data Ar39 AX
Get data signal Ar39 0.014+/-0.011 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1298858d0> len t=120
baseline Ar38. v=-0.024791918175, e=0.00197428190995
get signal data Ar38 L1
Get data signal Ar38 0.6138+/-0.0024 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x173f9a550> len t=120
baseline Ar37. v=-0.0210181245986, e=0.00407164003556
get signal data Ar37 L2
Get data signal Ar37 0.040+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x173f9add0> len t=120
baseline Ar36. v=0.000139691641542, e=1.23262004883e-05
get signal data Ar36 CDD
Get data signal Ar36 3.2652+/-0.0035 len t=400
a-01-J-5836 added analysis time 0.571748971939s
analysis added to mass spec database
mass spec save time= 0.630
persistence save - dvc
================= post measurement started
create new session 4942147408
close session 4942147408
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.137331529085
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-5836.json
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
add to repo msg=modified - -J-5836.dat.json
add to repo msg=modified - -J-5836.blan.json
add to repo msg=modified - -J-5836.inte.json
add to repo msg=modified - -J-5836.icfa.json
add to repo msg=modified - -J-5836.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/a-01/tags/-J-5836.tags.json
add to repo msg=modified - -J-5836.peak.json
add to repo msg=modified - -J-5836.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/a-01/monitor/-J-5836.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-5836.inte.json
add to repo msg=modified - -J-5836.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-5836.blan.json
commit message=<BLANKS> preceding ba-01-J-2666
add to repo msg=modified - -J-5836.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x156393c50>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4942147408
add association Jan_air170
get identifier "a-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x138722ad0>
close session 4942147408
================= post measurement finished
02:43:07 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
02:43:07 -- ******* Post Run Check Passed *******
02:43:07 -- Automated run a-01-J-5836 success duration: 839.290 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=44
update duration runid=a-01-J-5836, duration=839.28984189, md5=c0980a6f
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000406980514526
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.21865081787e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.88893890381e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.0001220703125
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000102043151855
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000121116638184
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.00950622559e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000155210494995
executed snippet estimated_duration=108.0, duration=0.0123238563538
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000179052352905
executed snippet estimated_duration=4.0, duration=0.00544190406799
Script duration 664.0
Run total estimated duration= 665.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
pump_ms in script context. using previous estimated duration
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
pump_extraction_line in script context. using previous estimated duration
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
nruns=4 before=5.0, run_dur=2660.0, btw=135.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/AirsCocktails.rem.txt
/Users/jan/PychronDev/experiments/rem/AirsCocktails.ex.txt
doing event level: 3
add run
