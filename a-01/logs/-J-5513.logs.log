do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000196933746338
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.90734863281e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.10079956055e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.29289245605e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.60555267334e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.29289245605e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.41617584229e-05
executed snippet estimated_duration=250.0, duration=0.00938391685486
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000134944915771
executed snippet estimated_duration=4.0, duration=0.000942945480347
Script duration 806.0
Run total estimated duration= 807.000
run duration: 0:13:27
doing event level: 2
23:17:39 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4967310640
close session 4967310640
$$$$$ Clearing conditionals
adding conditionals CDDtrip
extract conditionals from file. /Users/jan/PychronDev/scripts/conditionals/CDDtrip.yaml
no attr for this modification cd={'extraction_str': '', 'attr': '', 'mapper': '', 'use_termination': False, 'start_count': 0, 'nskip': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': 'Skip Next Run', 'ntrips': 1, 'use_truncation': False}
adding cancelation attr="Ar36" test="Ar36<0.002" start="60"
no attr for this truncation cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
adding termination attr="Ar40" test="Ar40>5000.0" start="1"
Invalid conditional kind="pre_run_terminations"
no attr for this action cd={'mapper': '', 'attr': '', 'start_count': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': None, 'ntrips': 1}
Invalid conditional kind="post_run_terminations"
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run a-01-J-5513
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run a-01-J-5513
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
23:17:39 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.19710,0.15052,0.01009,0.00096,0.01734,0.00196
23:17:39 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
23:17:39 -- ******* Pre Extraction Check Passed *******
=================================================================================
23:17:39 -- stopping status monitor
stop 4939519376
Status monitor stopped
Status monitor finished
23:17:41 -- starting status monitor
start 4939519376
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 23:17:42.924564
Extraction Started jan_sniffair_x2.py
23:17:42 -- ******* Extraction Started jan_sniffair_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12a13cd10>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.10623168945e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.39233398438e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.48362731934e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.41481781006e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.19752502441e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.41481781006e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.10623168945e-05
executed snippet estimated_duration=250.0, duration=0.0101499557495
Jan Air Sniff Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.00543212891e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0182039737701
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.00015115737915
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
23:17:43 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
23:17:43 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=3
23:17:44 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
23:17:44 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
23:17:45 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=3
23:17:45 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
23:17:46 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
23:17:46 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
23:17:47 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
23:17:47 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=3
23:17:48 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.98143386841
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000173091888428
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
23:17:49 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
23:17:49 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=3
23:17:50 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
23:17:51 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0589118004
executed snippet estimated_duration=48.0, duration=17.9563100338
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000158786773682
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
23:18:07 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
open name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Z ===>> OK
GetIndicatorState Z ===>> OK
change switch state (True, True)
update switch state Z True args=() kw={} ncanvase=3
23:18:08 -- OPEN   VALVE-Z (Inner Pipette 2)
-------------------------- open None (Inner Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0248072147
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=3
23:18:23 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.2354969978
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000144958496094
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
23:18:25 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
23:18:25 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00529193878
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
23:18:28 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.49367785454
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000163078308105
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
23:18:28 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01636600494
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
increment shot count 2761
saved current shot count 2761
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
23:18:31 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0720789433
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.9349160194
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00021505355835
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
23:18:47 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
open name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Z ===>> OK
GetIndicatorState Z ===>> OK
change switch state (True, True)
update switch state Z True args=() kw={} ncanvase=3
23:18:49 -- OPEN   VALVE-Z (Inner Pipette 2)
-------------------------- open None (Inner Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0482871532
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=3
23:19:04 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.2205679417
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=9.98973846436e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
23:19:05 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
23:19:06 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01860404015
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=3
23:19:09 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.51633191109
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000159978866577
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
23:19:09 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00857496262
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
increment shot count 2762
saved current shot count 2762
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
23:19:11 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0626480579
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.889783144
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000185966491699
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=3
23:19:28 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01551485062
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
23:19:30 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0752108097
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=3
23:20:01 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.02531790733
executed snippet estimated_duration=105.0, duration=37.0048491955
SniffPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=250.0, duration=142.287050009
jan_sniffair_x2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
23:20:05 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
23:20:05 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8253 5.8790 5.9920 6.1652 6.2306 6.3935
Ar39     5.7246 5.7712 5.8844 6.0513 6.1158 6.2800
Ar36     5.4021 5.4402 5.5478 5.7102 5.7707 5.9311
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 197.475737044497
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=a-01-J analysis type=air
Measurement Started jan_unknown400_120.py
23:20:05 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 197.923274125618
GetParameter Source Current Readback ===>> 552.779832753464
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
testing...
no interpolation path defined
executed snippet estimated_duration=564.372928, duration=0.000142097473145
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.017+/-0.006
 - setting Ar40 blank 0.152+/-0.008
 - setting Ar36 blank 0.00359+/-0.00018
 - setting Ar37 blank 0.056+/-0.005
 - setting Ar38 blank 0.0146+/-0.0020
 - setting Ar39 blank 0.053+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57056999]
H1 map mass to dac 39.9624 >> 5.87896
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87892537936) on H1
setting magnet DAC
current  : 5.878926
requested: 5.878925
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87892537936 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x15bc5a350>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x172662a70>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x176be68f0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 8.0}
Equilibration Started
23:20:06 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
23:20:06 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
23:20:10 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 8.0sec
sniff (8.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
measuring sniff. ncounts=8.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
23:20:18 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
waiting for write to finish
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
23:20:19 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
measurement finished
23:20:19 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
estimated time: 8.389 actual time: :8.514
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
testing...
set_fits () {}
no interpolation path defined
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
calculate duration
testing...
no interpolation path defined
set "Ar41" to "('linear', 'SEM')"
executed snippet estimated_duration=4.0, duration=0.000308036804199
set "Ar40" to "('Parabolic', 'SEM')"
executed snippet estimated_duration=4.0, duration=0.0268869400024
set "Ar36" to "('Parabolic', 'SEM')"
Pump after analysis
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
doing GOSUB
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
testing...
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000265836715698
Pump Microbone
set "H2" to "('average', 'SEM')"
close () {'description': 'Jan Inlet'}
set "H1" to "('average', 'SEM')"
close name=--- desc=Jan Inlet
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
checking ownership. requestor=129.138.12.150
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
check software interlocks R
interlocks []
add group /signal/Ar41 (Group) '' table H2
actuate state mode=None-script, software_lock=False
add group /signal/Ar40 (Group) '' table H1
doing actuation None-script close_channel False
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
measuring signal. ncounts=400
Close R ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
starting measurement
23:20:19 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
23:20:20 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.64134812751483}"
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
23:20:21 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2.4212304296266622}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
23:20:22 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 69.8229994530421}"
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
23:20:23 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
23:20:24 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.7875253217392}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
State checksums do not match. Local:839019448 Remote:1966085460
State checksum failed
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
23:20:24 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 71.66906274488755}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.79647397995
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 71.53859271526528}"
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
23:20:26 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=3
23:20:27 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 71.38735279872655}"
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
set states for children of L. state=False
handle state [('L', False)]
update switch state L False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
23:20:28 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 72.67754012165376}"
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 72.56528027265554}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=3
23:20:29 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=3
23:20:30 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 72.64513690085434}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.44431413829753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.51921691659831}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.42990028244812}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.43156888696937}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.56989000016029}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.53649471809071}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.55536208989092}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.63576906147136}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.80199816355213}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.85989416472434}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.84342658232306}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.87522256780767}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.01200040278765}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.05986045268332}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:20:45 -- collecting point 25
Join finished
block finished. duration 15.0611460209
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=3
23:20:45 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=3
23:20:45 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.02693854015034}"
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=20.2473568916
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=27.0915100574
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
23:20:46 -- ******* Post Equilibration Finished *******
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.03466886743594}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.09948882444117}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.1196879153224}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.09496489935655}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.11225232856458}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.10185071440279}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 74.06952823523359}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9985851187798}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95035852112883}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94895384621807}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93803460093159}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9112236511091}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93967359312802}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92715106548192}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92537222026672}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91934334152697}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91970881779334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91931858423133}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91390619922323}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9279672931573}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91086111599745}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91795992837217}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91914254104483}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91477239336412}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:21:11 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91419026842266}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91688950075515}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9264620944937}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93736296220547}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9506381754052}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95096863399496}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95445259346462}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9377302573265}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92378797076796}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91093406510282}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91638356782192}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2534119683699727}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92332608507971}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25386329942981056}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90867961011939}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25323350606779726}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90220269213907}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2525238297331048}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89560113348432}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25299174347466863}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89294527653561}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2530252434344581}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9036076020807}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2531644195583605}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90315053155574}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25338973012424165}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9082206044115}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25319944544871614}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90385880887132}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25289428074338466}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90627075266691}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25238950420726325}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91372614685017}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25310730348400334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91653246534057}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2532376548462956}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91069409927616}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2544476511385558}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91818553374591}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2541306195444158}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:21:37 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91903563763394}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2544263592690716}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9197283876787}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25356035247044895}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91798054856622}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2532204871623214}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91439571478332}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2536116798882053}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92416133114529}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25308598852315534}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9335228636595}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2525436630256757}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94189317281251}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25202213769511}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9344084150639}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2523319215873946}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94332045357362}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.252570848188883}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94284945044623}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.253228116627948}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95087986887724}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2526293155575925}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9626482881819}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25256990245767236}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9668535358136}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25291255971874477}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96536166146717}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2530329240782217}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96875355077542}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2531059724164019}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96344046497215}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2529383745427579}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96189593980743}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25295247700058227}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96667750173445}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2526004439180197}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96480716337146}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2527643529615677}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96411167797505}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.252999013200899}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9693777416721}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2525182129580045}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96944971795313}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25269215572066694}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.968898270976}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.252746124531047}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96590652192177}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25215107947254156}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97076681726821}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25213271320613145}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:22:03 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96931267730034}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25243132093665166}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96432753823365}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.252543624095332}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96563292604702}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2523695148995653}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96432814709664}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25229800918467044}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96604969654172}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2516952597068803}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96774791057821}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2517487122718665}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96523919803872}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2519524690098863}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97033410006038}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2521841507914763}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96587311181423}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25235671562746415}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96368116677333}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2524483633533674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96625656681414}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2522169210882891}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96875942464298}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25224392520792366}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97030773898807}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2522787040534789}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96730547468732}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25255468898394473}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96722286812725}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25254529171668394}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96992878475692}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2523868553287122}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97681063706014}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2525148907317528}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97329095135852}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2529443780245285}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97052176835214}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25336929781949746}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97110220223503}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25349202857998443}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96928636736396}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2537000695042554}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97006141319491}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2541800044054945}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9694100513845}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2546592739797524}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97172135681501}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25414777061457844}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97108568384078}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25388164940712654}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:22:30 -- collecting point 125
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96898382922072}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2540596540111052}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96475701746786}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25355024316730257}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96519014349788}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2534344263037336}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96516242801815}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25321212352887496}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96564569045226}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25357544433860224}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96558022950191}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2533791074002464}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96167883307129}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2530433755902268}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96389310632418}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2529115137249708}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96937475785462}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2531221123886143}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9686495598927}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2526585186590046}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96689679285926}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2526472720761678}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96493275606949}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2525113700889143}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96476089677785}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2522115227429835}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96947494285675}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2521224583751467}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97127954879315}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.251825975617091}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9719402930478}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25191104839031186}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96974847044716}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2518141427429779}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9698266185188}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25185891659632886}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97101646234591}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25173269704930956}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97140066737327}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25199018313481103}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96997982374361}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2519354326394633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97307758616722}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25205522947210024}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97493068278956}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2518323112641988}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97375848932069}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2515721194342334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9760996044627}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25159867735866237}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:22:56 -- collecting point 150
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97518092190461}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25139565490387705}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97597080884952}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513570673132561}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97554815240069}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25130579905327155}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97607742331783}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513030741272318}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9776150886685}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25129414006964484}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97745180189602}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2511737647531142}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97307980636756}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25175097258263457}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.97080149310163}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2516939227047532}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9651795165133}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25173266615276435}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96192133850397}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2518153196768912}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.96269215589365}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514439417731042}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9605870499551}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2516927285340655}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9560147859155}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25189146673475615}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9523973884745}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25153298017656645}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95072001037202}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25172005810894243}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95036146179861}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2517295185761272}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.95035245593277}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25150013121204806}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94881931671867}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25145852559409865}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94675018833509}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25138289974966943}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94127211215171}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25146804727803684}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93852572518381}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2516507110330509}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94086679233139}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2515265574162958}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94427494853949}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2517465275054808}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94726844569729}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2516802914428818}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94752186307949}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25184052025024084}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:23:22 -- collecting point 175
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94868579208867}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2516752068991021}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94762852930803}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25167428739653974}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94786771234547}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25158211088961624}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94500318854195}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514081207382002}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94598485117297}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514902866040327}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9474130002876}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25178456771526414}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94548580728897}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25172164287317245}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94581993528865}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25187896793931935}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94232614670251}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25173574556022715}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94386810680086}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2520099973381218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94391796742481}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2519410681243002}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94637932745516}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25192310841131993}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94675655937633}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25218137912158234}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94784545801082}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2521993317790574}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94747156272044}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25222313340111063}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94315116861799}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2521226871900375}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94186924108165}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25197309285392305}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94314962302248}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25196617366577656}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94557655811708}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2517979484188561}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9455877471714}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25188847609016274}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.945060715209}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25161400307321574}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94512901701731}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2520370020647271}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94425016564146}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25210418759632314}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9445188688695}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2521927975138647}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94526878432251}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25210888482238325}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:23:49 -- collecting point 200
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94795337125672}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2523453725651478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94543562753545}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25236768011205607}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94174388846838}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25248180623898053}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94138949631125}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2524738046020592}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94164753168499}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2524748926576198}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94210681369421}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.252375562798443}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.94302742211482}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2524858699643285}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9399994838089}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2523665305694134}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93692982623816}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25206192955715634}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93525441174009}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25194455343432914}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93482007307831}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25190438462654907}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93255794344661}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2519713886864547}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93154850161838}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2518941306760625}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93157511259075}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2517701463741649}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.93116815830842}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.251655003743403}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9298523007623}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25186185313521947}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9278028686297}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25187989334069316}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92689095728046}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2518286454770641}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92544540564793}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2515536031348459}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92586640376526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2515056980993659}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92606808795355}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25164364524886573}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92407638580688}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25168440085663357}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92317153125477}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514996185549486}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92227382216156}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514639669763633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92245673085067}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25125364847228315}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:24:15 -- collecting point 225
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9231608835131}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25121835111444335}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92238927571861}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513910516450959}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92156623840567}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513619925848387}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92136237544264}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25130621683545773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92188905658057}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25135072333008013}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92005071186699}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514395400897047}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91913177598606}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513497149367845}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9187733608174}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2514054217947225}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91856681913006}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25130840508056407}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91808598926147}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513607066388728}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91826501363491}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2512918312105255}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91693347794097}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25137447435453936}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91907926973037}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25140962236886016}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9196042673002}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25124055103506593}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91980227729147}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513076061416512}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92056783065955}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25114703910074565}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91981658097109}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.251253601520947}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91778944751303}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2511188467656646}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91607718458101}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25120456091871424}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91634895042615}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25130364052640464}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91449537207178}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.251375285968442}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91332455529692}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513901807328772}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91159107201295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513882806087965}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91210338034028}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2513098979002732}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91167597882291}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2512834603246089}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:24:41 -- collecting point 250
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9129483610773}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2511754088578414}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91337111538567}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2508428644403264}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91408966112976}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25089792555913715}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91432104364878}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2507719472393775}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91426305939541}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25077335854704286}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91224717421892}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25079314146203946}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91076924688988}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2507320618716441}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90807102514252}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25068941257288274}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90842570320518}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25050489233585693}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90835956238506}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2503060593552509}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90863072879924}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2503175058128292}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90901243683231}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2503291604436399}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90866030156934}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2503214323421432}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90696682076477}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25041635399515466}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90751402533448}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.250434988406248}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90843902792933}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.250522108322747}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90981587168825}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504911588686766}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91112025835227}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25057028646036394}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91128104958933}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2505305539598466}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91301161726662}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2505981073482737}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9140521633523}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2505755258492935}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91447115367393}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25062103570288363}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9154793200222}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2507525723123377}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91636047487104}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.250668573212899}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91841766462599}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25060452953296836}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:25:07 -- collecting point 275
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91797609875907}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25061092468156543}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91845693752924}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.250515394680205}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92131423995653}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25051526627712756}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92225421021305}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2505763055665787}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92298275073009}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2505388019014954}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92502144087936}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25060140475826975}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92777802596623}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504982744924529}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92707370826685}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2505544572493851}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92621216662059}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504980735969961}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.926597697078}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.250440152842772}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92821308097164}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25050848892650623}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92940863267509}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25053568545965965}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92976319694199}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25042591084100674}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92847066946533}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25046203939048417}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92724796299933}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504277441105905}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9263850904649}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25038927329906163}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92437787452589}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504387929144577}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9237046527607}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504431000018293}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92271711558023}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504666525612636}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92273545863208}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2503818621430386}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92160455096428}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2504380144212515}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.92020282886551}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25049263235630215}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91714309792759}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25035680574878005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9166415866921}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2503209881998612}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91588012353809}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2502106988202422}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:25:34 -- collecting point 300
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91474581973449}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2502043646703735}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91508810289704}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2501655433831795}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91363142712109}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25015230882359146}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91233644288798}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.25004862700957736}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91126689770743}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24992338538021858}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91152305627166}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24980824543133096}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9102157907532}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2497119093491928}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90999311662671}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24970207809932793}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91088086155284}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24967525463567575}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90996056757206}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24965705467823113}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9090682517178}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24963294612464304}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90753084439356}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2496562878464274}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90592967705413}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24965124898947588}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90482275233465}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2496768601930603}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90414488394265}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24967422121505556}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90370431503999}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24961991070992862}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9031457147031}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24952795184644172}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90256844498774}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2495018882280431}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9025904940213}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24949971534476872}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90286637190331}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2495962220639823}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90257845360728}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24956356059059392}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90144281308109}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2494625697421664}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90319936801566}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24942997092549934}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90362895134614}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24934481882338488}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90389144659795}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24931868445322775}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:26:00 -- collecting point 325
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90232894995577}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24936972311614775}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90241664938071}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24930420136339115}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90356219299308}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2492897961307598}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90296019584703}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24929481037206208}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9029062909478}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24920749343822662}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90213570771172}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24913344586970904}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90199317777224}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2491924161009449}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90221184796854}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24925356983405966}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90207321761058}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24938223812586047}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9019132642469}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2493756836512091}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90138775917582}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24936832789848734}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89979171551379}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2493779956031682}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89951789957755}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2493106039315079}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89860024143732}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2493036940223547}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89803382000355}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24923038110114676}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89882123418151}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24928593523410592}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89951036981574}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24918466612646828}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89857630795774}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2491282380917741}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89827548255575}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24907098368252245}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89824104019775}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24911365773479294}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8982146237257}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24905853023683844}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89663291407263}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2489760021466444}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89639993614563}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24889657964776857}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89625331535133}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.248877617662844}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89461504435438}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24897286980190064}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:26:26 -- collecting point 350
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89430074312742}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.248919604973798}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89422115230379}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24897001430444593}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89369385999504}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24892930700861626}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89289593077396}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24891947481836418}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89220679400884}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24879802500236775}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89289197173774}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24870199171656598}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89276520798737}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24859280816792745}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89099241953465}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24866679421201837}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.88936712330525}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24866738305051062}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8891948174633}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24873458826159373}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89041442646857}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2488364698737306}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89172044232963}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24879344362750228}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89233799086625}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24876716180496017}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89316714580902}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24879257873599092}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89255603181593}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2487988632927468}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89050484695908}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24880128582186495}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.88985925580452}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24887753270400942}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89032136814868}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24884441135724772}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.88998114813637}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24882016259003364}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89087287400665}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2488523650636344}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89085492219883}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24888293564186226}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89107048708581}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24884996299684276}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8925734917874}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24891622507086086}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89364084363643}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2489011888615344}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89467973564226}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24893146704597469}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:26:52 -- collecting point 375
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8959170087879}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24885203094816288}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89657103327669}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2489214910766479}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89698058897028}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2488554178088913}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89669649814921}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24868886630877185}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89653211484504}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863846653742744}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89628414526646}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24855929637479252}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89577709411162}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2485206640002493}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89558357827244}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24851025083749168}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89437838917628}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863830451744146}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89485585613116}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24866404758813337}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89537436036541}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24869396076180428}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89576725795422}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24870865027691358}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89499521036517}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24869209305171047}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89436093312554}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24866297565593543}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8931207724889}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863394030224556}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8928908128526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2487110416624097}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89335761052065}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24870685637780593}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8935878662306}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2487169700554549}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89421524432922}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486169906829107}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89492771996134}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2485995348230653}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89432281390735}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24851756529355623}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89498046632774}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2485786685816434}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89403841569812}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24855100055907625}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89296280081987}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24861372796359105}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89323644494355}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486556949615807}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1312084455741355}"
23:27:19 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.442
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57056999]
H1 map mass to dac 34.2 >> 5.23961599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.23958513544) on H1
setting magnet DAC
current  : 5.878925
requested: 5.239585
Delta Dac: 0.639340
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.23958513544 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89313926648784}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91831370253563}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89944832739492}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90016817340407}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1241795386578981}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9042769415308}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90539966022905}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91184005332713}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.91642587364446}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.9140719236053}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11027578845666346}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89975766462179}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89713604485533}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90282173202944}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90629896303645}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90950688445457}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.114840827607394}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90367629173531}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90446515978876}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90855595022607}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90488843261633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.90011839838233}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12422931367963291}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89900457243797}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89970253170094}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8981099501486}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89617891890876}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89614030792688}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12820740413508533}"
23:28:01 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89706830231898}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89715678023887}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89726212537552}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89477060619475}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8941024940429}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13024521801907044}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89523202589764}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89474766191347}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89260217197804}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89246841622312}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89152290544502}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13282480661694787}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89387759560947}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89237238588863}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8911632220016}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89353913890595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89353747801064}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1308102340513289}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89240150229429}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89138900632909}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89101246736635}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89116378950493}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89107338210843}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1332743299535327}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89071516871421}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89052248386196}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89193498491572}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89197973330367}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89123497887384}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13311273318812805}"
23:28:27 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.88962576052049}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89075939994329}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89229729245058}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8915209574789}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89050060471378}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13384710734818858}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89146606971302}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89178807043884}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89175192119242}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89211548381769}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89204062785923}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.132307084202734}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89321717951667}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863632156111753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89303770677571}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863689772781938}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89219534387522}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863745530849857}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89355585005357}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863799518820384}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89383626473389}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863851819666832}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13051144732807102}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8944110463606}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486390251125647}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89433194853751}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863951666737327}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8948246706122}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486377453931225}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89523518907843}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863824130984025}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89576709342948}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863872285216038}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12858061863248887}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89499546994918}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863919063612855}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8949088371191}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863964524308346}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8947074322104}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864008722206749}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89408218623564}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864051709203822}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89356836926699}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863889985150484}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13077934279497727}"
23:28:54 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8933130140337}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863933408988387}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89296073259068}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486397569009371}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89312576715183}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486401687298851}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89383037736671}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864056999911643}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89430246757526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864096110963307}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13004524448671612}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89371969957469}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864134244238678}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89331518065565}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863985477387052}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89288559251104}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863840338995224}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89310069211186}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486388017554942}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89242324674784}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486391906361422}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13192446531413143}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8929070534098}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863957036665735}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8931164808387}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486399412662303}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89327035516209}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863857230101583}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89337192384531}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863894611270804}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89309135774435}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863931152413754}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13125635431762084}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8921960752898}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863966881531302}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89249108476776}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864001825393517}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.892377384608}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864036009606555}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89241958768002}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864069458675225}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89284518379986}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863941955170776}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1315025282621005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89239349854641}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863975690095225}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8916614784588}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486400872220874}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89216583211443}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864041073247756}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89238785600577}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864072764061484}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89254731031298}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864103814656752}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13180040174899546}"
23:29:20 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89180497737892}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24863983617802754}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89151169128509}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864014936170975}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89135988917369}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864045640453547}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8916533157687}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864075748536452}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89125860065339}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864105277617765}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13308911140857466}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89115491762074}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864134244240388}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89055023182227}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864162664322959}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89079187027642}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864190553189036}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89086675604305}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864217925594628}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89025574764291}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864244795754248}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13409196441905194}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89077193077335}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864134244240638}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8923492850669}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864161384139305}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89257472441709}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864188039396928}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89233207287278}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864214222880082}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89202415576437}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486423994700388}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13232355629759684}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.8915391021703}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864265223751614}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89203273841572}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486429006469335}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89179454780569}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864314481003602}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89146520638747}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.24864338483478088}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 73.89152921616893}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.2486436208254964}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13281849589303804}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.211
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=71.4982428598 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x175646fb0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x175646fb0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x179e79e90>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57056999]
H1 map mass to dac 39.9624 >> 5.87896
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x125e26d70>
doing pc
starting peak center. center dac= 5.87892537936 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87893 width=0.03000 (5.86393 - 5.89393)
Moving to starting dac 5.86392537936
setting magnet DAC
current  : 5.239585
requested: 5.863925
Delta Dac: 0.624340
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86392537936 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.113585011954. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86392537936, em= 5.89392537936, stm= 0.0015
calculated step values: start=5.86392537936, end=5.89392537936, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.863925
requested: 5.863925
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86392537936 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863925
requested: 5.865504
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86550432672 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865504
requested: 5.867083
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86708327409 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867083
requested: 5.868662
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86866222146 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868662
requested: 5.870241
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87024116883 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870241
requested: 5.871820
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8718201162 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871820
requested: 5.873399
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87339906357 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873399
requested: 5.874978
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87497801093 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874978
requested: 5.876557
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8765569583 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876557
requested: 5.878136
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87813590567 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878136
requested: 5.879715
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87971485304 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879715
requested: 5.881294
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88129380041 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881294
requested: 5.882873
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88287274778 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882873
requested: 5.884452
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88445169515 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884452
requested: 5.886031
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88603064251 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886031
requested: 5.887610
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88760958988 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887610
requested: 5.889189
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
ask. get packet. error: timed out address: UDP://129.138.12.152:1069
SetMagnetDAC 5.88918853725 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889189
requested: 5.890767
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89076748462 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890767
requested: 5.892346
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89234643199 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892346
requested: 5.893925
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89392537936 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8711698683337943, 5.8788351989951169, 5.8865005296564394], [51.151065726408405, 69.592711616174256, 51.376977048514298], 5.8766107500973224, 69.592711616174256)
Failed to find a valid peak. No peak greater than 1.0. max = 0.929419129664
Failed to find a valid peak. No peak greater than 1.0. max = 0.0963275481237
Failed to find a valid peak. No peak greater than 1.0. max = 0.212772517415
new center pos Detector(H1) (Ar40) @ 5.878835199
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87886981911
update mftable H1 Ar40 5.87886981911 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893925
requested: 5.878835
Delta Dac: 0.015090
Checking detector protection. dv=0.01509
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.878835199 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.929419129664
Failed to find a valid peak. No peak greater than 1.0. max = 0.0963275481237
Failed to find a valid peak. No peak greater than 1.0. max = 0.212772517415
flush and close file /Users/jan/PychronDev/data/isotopes/31/5e69f5-dc8e-42eb-9112-b8f8656a7c8f.h5
finished measure script
executed snippet estimated_duration=564.372928, duration=631.841929913
jan_unknown400_120.py completed successfully
Measurement Finished
23:30:37 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
23:30:37 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.78949737549e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
23:30:37 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.46928691864
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
23:30:38 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
6214069328 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 6214069328
close session 6214069328
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4724807920
MassSpec Database Version: 16.0
close session 4724807920
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to a-01-J
setting aliquot to 5513
setting step to 
setting uuid to 315e69f5-dc8e-42eb-9112-b8f8656a7c8f
setting irradpos to a-01-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to air
setting material to Gas
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x15f2b4f50> len t=120
baseline Ar41. v=-0.190117000101, e=0.00473064667481
get signal data Ar41 H2
Get data signal Ar41 0.029+/-0.006 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x15f2b4990> len t=120
baseline Ar40. v=0.133196976432, e=0.00386725429683
get signal data Ar40 H1
Get data signal Ar40 74.046+/-0.012 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x15f2b4650> len t=120
baseline Ar39. v=-0.0655533720221, e=0.00500920122943
get signal data Ar39 AX
Get data signal Ar39 0.019+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x16c5e2a50> len t=120
baseline Ar38. v=-0.0252448202621, e=0.00185484701173
get signal data Ar38 L1
Get data signal Ar38 0.0524+/-0.0020 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x16c5e2c50> len t=120
baseline Ar37. v=-0.0209216054038, e=0.00452560832528
get signal data Ar37 L2
Get data signal Ar37 0.056+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x16c5e2ed0> len t=120
baseline Ar36. v=2.76148468971e-05, e=5.90771018304e-06
get signal data Ar36 CDD
Get data signal Ar36 0.2521+/-0.0009 len t=400
a-01-J-5513 added analysis time 0.807523012161s
analysis added to mass spec database
mass spec save time= 0.817
persistence save - dvc
================= post measurement started
create new session 4939153776
close session 4939153776
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.929419129664
Failed to find a valid peak. No peak greater than 1.0. max = 0.0963275481237
Failed to find a valid peak. No peak greater than 1.0. max = 0.212772517415
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-5513.json
add to repo msg=modified - -J-5513.dat.json
add to repo msg=modified - -J-5513.blan.json
add to repo msg=modified - -J-5513.inte.json
add to repo msg=modified - -J-5513.icfa.json
add to repo msg=modified - -J-5513.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/a-01/tags/-J-5513.tags.json
add to repo msg=modified - -J-5513.peak.json
add to repo msg=modified - -J-5513.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air170/a-01/monitor/-J-5513.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-5513.inte.json
add to repo msg=modified - -J-5513.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-5513.blan.json
commit message=<BLANKS> preceding ba-01-J-2486
add to repo msg=modified - -J-5513.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x17863b530>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4939153776
add association Jan_air170
get identifier "a-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x16986ae50>
close session 4939153776
================= post measurement finished
23:30:49 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
23:30:50 -- ******* Post Run Check Passed *******
23:30:50 -- Automated run a-01-J-5513 success duration: 790.244 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=14
update duration runid=a-01-J-5513, duration=790.243710041, md5=c78a166a
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000301122665405
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.2200088501e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.57899475098e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000126123428345
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000105857849121
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000118017196655
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000116109848022
executed snippet estimated_duration=108.0, duration=0.0253798961639
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000207185745239
executed snippet estimated_duration=4.0, duration=0.00500702857971
Script duration 322.0
Run total estimated duration= 323.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:214.0
pump_ms in script context. using previous estimated duration
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.00679016113e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000128030776978
executed snippet estimated_duration=0.0, duration=0.00617289543152
script duration name:co2 seconds:0.0
pump_extraction_line in script context. using previous estimated duration
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000196933746338
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.98294830322e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000140905380249
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000108957290649
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000147819519043
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.0001060962677
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000118970870972
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.60555267334e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000107049942017
executed snippet estimated_duration=250.0, duration=0.0347490310669
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
nruns=83 before=5.0, run_dur=25663.0, btw=3690.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
